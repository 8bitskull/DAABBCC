local ctr = require "tests.controller"

-- Walls
local bwall = hash("/hero")
local hero = hash("/go")

local vdown = vmath.vector3(0, -1, 0)
local vleft = vmath.vector3(-1, 0, 0)
local vright = vmath.vector3(1, 0, 0)
local vup = vmath.vector3(0, 1, 0)
local normal = vdown
local _boxpos
local _spriteSize
local hero_id
local wall_id

local ray_id
local ray_direction = vmath.vector3(1, -1, 0)
local ray_distance = 120

local ray_pos 
local hit, impact, raynormal, rayend
local line_end_point = vmath.vector3()
local color =  vmath.vector4(1, 1, 1, 1) 
function init(self)

 msg.post("@system:", "toggle_profile")

 daabbcc.createTree("RayWorld", 2, 0, 4)

  --bwall: 0
  _boxpos = go.get_position(bwall)
  local _sprite =  msg.url("default", bwall, "sprite")
  _spriteSize = go.get(_sprite, "size")
  wall_id = ctr.addRect("RayWorld", _spriteSize, _boxpos, 0, 0, 0) 

  _pos = go.get_position(hero)
  ray_pos = _pos
  ray_id = daabbcc.createRay(ray_pos.x,ray_pos.y, ray_direction.x, ray_direction.y, ray_distance)

  hit,rayend, impact, raynormal = daabbcc.rayCastToAABB("RayWorld", ray_id, wall_id)

  local targetpos = vmath.vector3(_pos.x+210, _pos.y,_pos.z) 
  go.animate("/go", "position", go.PLAYBACK_LOOP_PINGPONG, targetpos , go.EASING_LINEAR, 3.5, 0)

  local boxtargetpos = vmath.vector3(_boxpos.x+210, _boxpos.y,_boxpos.z) 
  go.animate("/hero", "position", go.PLAYBACK_LOOP_PINGPONG, boxtargetpos , go.EASING_LINEAR, 2.5, 0)
end



function update(self, dt)
  local _pos = go.get_position(hero)
  _boxpos = go.get_position(bwall)
  daabbcc.updateRect("RayWorld",0,_boxpos.x, _boxpos.y,_spriteSize.x, _spriteSize.y )

  ray_pos = _pos
  daabbcc.updateRay(ray_id,ray_pos.x,ray_pos.y, ray_direction.x, ray_direction.y, ray_distance)

  hit,rayend, impact, raynormal = daabbcc.rayCastToAABB("RayWorld", ray_id, wall_id)
  line_end_point = vmath.vector3(rayend.x,rayend.y,0)

  if hit == 1 then
   line_end_point = vmath.vector3(impact.x,impact.y,1)
   color =  vmath.vector4(1, 0, 0, 1) 
 else 
   color =  vmath.vector4(1, 1, 1, 1) 
 end 

 msg.post("@render:", "draw_line", { start_point =ray_pos, end_point = line_end_point, color = color } )

end


